@model IEnumerable<CadViewModel>
@{
    ViewData["Title"] = ViewBag.Category == "All" ? "All 3D Models" : ViewBag.Category;
}
<head>
    <script type="importmap">
        {
          "imports": {
              "three": "https://unpkg.com/three@v0.161.0/build/three.module.js",
              "three/addons/": "https://unpkg.com/three@v0.161.0/examples/jsm/"
          }
        }
    </script>
</head>
<body>
    <h2 class="text-center">@ViewData["Title"]</h2>
    <hr />

    @if (!Model.Any())
    {
        <p class="text-center">No models yet...</p>
    }
    else
    {
        <div class="container text-center mt-5">
            <div class="row">
                @foreach (CadViewModel cad in Model)
                {
                    <div class="col-4">
                        <div class="card">
                            <h4 class="card-header text-center mb-1">@cad.Name (@cad.Category)</h4>
                            <div class="card-body">
                                <div id="model-@cad.Id">
                                    <script type="module">
                                        import * as THREE from 'three';
                                        import { STLLoader } from 'three/addons/loaders/STLLoader.js';
                                        import { OrbitControls } from 'three/addons/controls/OrbitControls.js';
                                        function loadModel(cadId, cadName, constant, x, y, z) {

                                            // Scene
                                            const scene = new THREE.Scene();
                                            scene.background = null;

                                            // Camera
                                            const camera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.1, 1000);
                                            camera.position.set(x, y, z);
                                            camera.lookAt(0, 0, 0);

                                            // Renderer
                                            const renderer = new THREE.WebGLRenderer();
                                            renderer.setSize(window.innerWidth / constant, window.innerHeight / constant);
                                            renderer.setClearColor(0x000000, 0);
                                            document.getElementById(`model-${cadId}`).appendChild(renderer.domElement);

                                            // Lights
                                            const directionalLight = new THREE.DirectionalLight(0xffffff, 1);
                                            directionalLight.position.set(0, 1, 0);
                                            scene.add(directionalLight);

                                            const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);
                                            scene.add(ambientLight);

                                            // STL Loader
                                            const loader = new STLLoader();
                                            loader.load(`/others/cads/${cadName}${cadId}.stl`, function (stl) {
                                                const material = new THREE.MeshLambertMaterial();
                                                const mesh = new THREE.Mesh(stl, material);
                                                scene.add(mesh);
                                                stl.center();
                                            }, undefined, function (error) {

                                                console.error(error);

                                            });

                                            // Animation
                                            const controls = new OrbitControls(camera, renderer.domElement);
                                            controls.enableDamping = true;
                                            controls.dampingFactor = 0.25;
                                            function animate() {
                                                requestAnimationFrame(animate);
                                                renderer.render(scene, camera);
                                                controls.update();
                                            }
                                            animate();

                                            window.addEventListener('resize', function () {
                                                const width = window.innerWidth / constant;
                                                const height = window.innerHeight / constant;
                                                renderer.setSize(width, height);
                                                camera.aspect = width / height;
                                                camera.updateProjectionMatrix();
                                            });
                                        }
                                        loadModel(@cad.Id, "@cad.Name", 4, @cad.Coords.Item1, @cad.Coords.Item2, @cad.Coords.Item3);
                                    </script>
                                </div>
                            </div>
                            <ul class="card-footer fs-6 mb-0">
                                <li class="list-group">@cad.CreatorName</li>
                                <li class="list-group">@cad.CreationDate</li>
                            </ul>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</body>
