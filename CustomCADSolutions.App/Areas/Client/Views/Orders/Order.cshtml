@model CadViewModel
@inject IViewLocalizer Localizer
@{
}

<div class="container d-flex flex-column align-items-center">
    <form id="payment-form" class="col-6" method="post" autocomplete="off">
        <input name="id" value="@Model.Id" hidden />
        <div class="row text-center mb-3">
            <div class="col-6">
                <label for="card-element" class="form-label mb-4">Credit or debit card</label>
                <div id="card-element" class="mb-3"></div>
                <div id="card-errors" role="alert" class="small text-danger"></div>
            </div>
        </div>

        <div class="row mb-4">
            <div class="col-2">
                <button id="submit-button" class="btn btn-primary">Submit Payment</button>
            </div>
        </div>
    </form>
    <div class="col-sm-4 col-12 mt-0 mb-3">
        <div id="model-@Model.Id" class="bg-transparent"></div>
    </div>
</div>


@section Scripts {
    <script type="module">
        import { loadModel } from '../../../js/site.mjs';

        const cad = {
            id: @Model.Id,
            x: @Model.Coords.Item1,
            y: @Model.Coords.Item2,
            z: @Model.Coords.Item3,
            axis: '@Model.SpinAxis',
            fov: @Model.Fov,
            rgb: {
                r: @Model.RGB.Item1 / 255,
                g: @Model.RGB.Item2 / 255,
                b: @Model.RGB.Item3 / 255,
            }
        };

        loadModel(cad);
    </script>

    <script>
        const divElement = document.getElementById('model-@Model.Id');
        divElement.setAttribute('style', 'height: 20rem !important');
    </script>

    <script src="https://js.stripe.com/v3/"></script>

    <script>
        var stripe = Stripe('@ViewBag.StripeKey');
        var elements = stripe.elements();

        var card = elements.create('card');
        card.mount('#card-element');

        var form = document.getElementById('payment-form');
        form.addEventListener('submit', function (event) {
            event.preventDefault();

            stripe.createToken(card).then(function (result) {
                if (result.error) {
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;
                } else {
                    stripeTokenHandler(result.token);
                }
            });
        });

        function stripeTokenHandler(token) {
            var form = document.getElementById('payment-form');
            var hiddenInput = document.createElement('input');
            hiddenInput.setAttribute('type', 'hidden');
            hiddenInput.setAttribute('name', 'stripeToken');
            hiddenInput.setAttribute('value', token.id);
            hiddenInput.setAttribute('class', 'form-control');
            form.appendChild(hiddenInput);

            form.submit();
        }
    </script>
}